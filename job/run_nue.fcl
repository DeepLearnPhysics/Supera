#include "services_icarus_simulation.fcl"
#include "largeantmodules_icarus.fcl"
#include "detsimmodules_ICARUS.fcl"
#include "multipartvertex_icarus.fcl"
#include "reco_icarus.fcl"
#include "stage0_icarus_defs.fcl"
#include "stage0_icarus_mc_defs.fcl"
#include "stage1_icarus_defs.fcl"
#include "channelmapping_icarus.fcl"
#include "genie_icarus_bnb.fcl"
#include "corsika_icarus.fcl"
#include "FilterNeutrinoActive.fcl"
#include "FilterNeutrinoInteraction.fcl"

process_name: BNBNueCosmicSupera

services:
{
  @table::icarus_g4_services
	@table::icarus_detsim_services
	@table::icarus_gen_services
	IFDH: {}
	IICARUSChannelMap: @local::icarus_channelmappinggservice
}

source:
{
	module_type: EmptyEvent
	timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
	maxEvents: 10
	firstRun: 1
	firstEvent: 1
}

physics:
{

 producers:
 {
	 rns: { module_type: RandomNumberSaver }
	 generator: @local::icarus_genie_BNB # from `genie_icarus_bnb.fcl`
	 cosmgen: @local::icarus_corsika_cmc
	 largeant: @local::icarus_largeant
	 # Reco producers
	 @table::icarus_stage0_producers
	 @table::icarus_stage1_producers
	 @table::icarus_stage0_mc_producers

	 # Saving MC information
   mcreco:   @local::standard_mcreco

	 # Multi-TPC DAQ
	 daq0: @local::icarus_simwire
	 daq1: @local::icarus_simwire
	 daq2: @local::icarus_simwire
	 daq3: @local::icarus_simwire
 }
 filters:
 {
	  eventActive: @local::icarus_FilterNeutrinoActive # from `FilterNeutrinoActive.fcl`
		#eventType: @local::icarus_FinalStateSelectFilter # from `FilterNeutrinoInteraction.fcl`
 }
 analyzers:
 {
	supera: {
		module_type: "LArSoftSuperaDriver"
		supera_params: "supera_nue.fcl"
		out_filename: "larcv.root"
		unique_filename: false
		stream: "mc"
		Verbosity: 2
		StrictDataLoading: false
	}
 }

 simulate: [ rns, generator, eventActive, largeant, mcreco, daq0, daq1, daq2, daq3,
						MCDecodeTPCROI,
						@sequence::icarus_stage0_multiTPC_TPC, # decon1droi, roifinder
						@sequence::icarus_stage0_EastHits_TPC,
						@sequence::icarus_stage0_WestHits_TPC,
						@sequence::icarus_reco_cluster3DCryoE,
						@sequence::icarus_reco_cluster3DCryoW]
 analyze: [supera]
 out_stream: [ out1   ]

 trigger_paths: [simulate]
 #end_paths:     [analyze,out_stream]
 end_paths:     [analyze]
 #end_paths: [out_stream]
}

#
# Generator BNB
#
# Fixing error 65 = missing flux files when running neutrino interaction
physics.producers.generator.FluxCopyMethod: "IFDH"
physics.producers.generator.GenFlavors: [ 12 ] # 12 for nue, 14 for numu
#physics.producers.generator.MixerConfig: "map 14:12 -14:-12 12:14 -12:-14" # oscillated
physics.producers.generator.TopVolume: "volCryostat" #"volDetEnclosure" #box including all cryostats, instead of "volCryostat" which is only C:0

#
# MCRECO configuration - what MC information do we record?
#
physics.producers.mcreco.SimEnergyDepositLabel: "largeant:TPCActive"
physics.producers.mcreco.SimChannelLabel: "largeant:TPCActive"
physics.producers.mcreco.MCParticleLabel: "largeant"
physics.producers.mcreco.UseSimEnergyDeposit: true
physics.producers.mcreco.MCRecoPart.SavePathPDGList: [13,-13,211,-211,111,311,310,130,321,-321,2212,2112,2224,2214,2114,1114,3122,1000010020,1000010030,1000020030,1000020040]

#
# LARG4
#
physics.producers.largeant.KeepParticlesInVolumes: [ "volCryostat" ]

#
# DAQ
#
# we are suppressing channels with no signal in the TPC
#physics.producers.daq0.SuppressNoSignal: true
#physics.producers.daq1.SuppressNoSignal: true
#physics.producers.daq2.SuppressNoSignal: true
#physics.producers.daq3.SuppressNoSignal: true

#
# DAQ continued - point each of the SimWire instances to a different TPC set
#
physics.producers.daq0.OutputInstanceLabel: "PHYSCRATEDATATPCEE"
physics.producers.daq0.TPCVec:              [ [0, 0], [0, 1] ]
physics.producers.daq1.OutputInstanceLabel: "PHYSCRATEDATATPCEW"
physics.producers.daq1.TPCVec:              [ [0, 2], [0, 3] ]
physics.producers.daq2.OutputInstanceLabel: "PHYSCRATEDATATPCWE"
physics.producers.daq2.TPCVec:              [ [1, 0], [1, 1] ]
physics.producers.daq3.OutputInstanceLabel: "PHYSCRATEDATATPCWW"
physics.producers.daq3.TPCVec:              [ [1, 2], [1, 3] ]

#
# MCDecodeTPCROI > decon1droi > roifinder
#

physics.producers.decon1droi.RawDigitLabelVec: ["MCDecodeTPCROI:PHYSCRATEDATATPCWW","MCDecodeTPCROI:PHYSCRATEDATATPCWE","MCDecodeTPCROI:PHYSCRATEDATATPCEW","MCDecodeTPCROI:PHYSCRATEDATATPCEE"]
physics.producers.MCDecodeTPCROI.FragmentsLabelVec: ["daq3:PHYSCRATEDATATPCWW","daq2:PHYSCRATEDATATPCWE","daq1:PHYSCRATEDATATPCEW","daq0:PHYSCRATEDATATPCEE"]
physics.producers.roifinder.WireModuleLabelVec: ["decon1droi:PHYSCRATEDATATPCWW","decon1droi:PHYSCRATEDATATPCWE","decon1droi:PHYSCRATEDATATPCEW","decon1droi:PHYSCRATEDATATPCEE"]
physics.producers.roifinder.ROIFinderToolVec.ROIFinderPlane0: @local::decoderroifinder_0
physics.producers.roifinder.ROIFinderToolVec.ROIFinderPlane1: @local::decoderroifinder_1
physics.producers.roifinder.ROIFinderToolVec.ROIFinderPlane2: @local::decoderroifinder_2
physics.producers.roifinder.ROIFinderToolVec.ROIFinderPlane0.ROILabelVec: ["MCDecodeTPCROI:PHYSCRATEDATATPCWW","MCDecodeTPCROI:PHYSCRATEDATATPCWE","MCDecodeTPCROI:PHYSCRATEDATATPCEW","MCDecodeTPCROI:PHYSCRATEDATATPCEE"] #["MCDecodeTPCROI"]
physics.producers.roifinder.ROIFinderToolVec.ROIFinderPlane1.ROILabelVec: ["MCDecodeTPCROI:PHYSCRATEDATATPCWW","MCDecodeTPCROI:PHYSCRATEDATATPCWE","MCDecodeTPCROI:PHYSCRATEDATATPCEW","MCDecodeTPCROI:PHYSCRATEDATATPCEE"] #["MCDecodeTPCROI"]
physics.producers.roifinder.ROIFinderToolVec.ROIFinderPlane2.ROILabelVec: ["MCDecodeTPCROI:PHYSCRATEDATATPCWW","MCDecodeTPCROI:PHYSCRATEDATATPCWE","MCDecodeTPCROI:PHYSCRATEDATATPCEW","MCDecodeTPCROI:PHYSCRATEDATATPCEE"] #["MCDecodeTPCROI"]
#
# Services
#
services.LArG4Parameters.FillSimEnergyDeposits: true
services.LArG4Parameters.KeepEMShowerDaughters: true
#services.LArG4Parameters.NoElectronPropagation: true
services.LArG4Parameters.NoPhotonPropagation: true
services.LArG4Parameters.ParticleKineticEnergyCut: 0.0005
#services.LArG4Parameters.DisableWireplanes: true
#services.LArG4Parameters.EnabledPhysics: ["Em","SynchrotronAndGN","Ion","Stopping","FastOptical"]
#services.LArG4Parameters.EnabledPhysics: ["Em","SynchrotronAndGN","Ion","Hadron","Decay","HadronElastic","Stopping"]
#services.LArG4Parameters.EnabledPhysics: ["Em","SynchrotronAndGN","Ion","Hadron","Decay","HadronElastic","Stopping","Optical"]
services.LArPropertiesService.ScintYield: 0
services.LArPropertiesService.ScintByParticleType: false

#
# *Temporarily* tone down the noise level
#
# https://github.com/SBNSoftware/icaruscode/blob/develop/fcl/detsim/standard_detsim_icarus.fcl#L52
services.SignalShapingICARUSService.NoiseFactVec:  [ [ 0.6, 0.6, 0.6 ], [ 0.6, 0.6, 0.6 ], [ 0.6, 0.6, 0.6] ]

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "larsoft.root"
   dataTier:    "reco"
   compressionLevel: 1
   # skim output (if needed)
   #outputCommands: [ "drop *",
   #                  "keep *_mcreco_*_*",
   #                 "keep recob::Hit*_gaushit_*_*"
   #                ]

	 # Only uncomment if selecting events with nu in active volume
	 SelectEvents: [simulate]
 }
}

services.TFileService.fileName: "ana.root"

services.message.destinations :
{
  STDCOUT:
  {
     type:      "cout"      #tells the message service to output this destination to cout
     threshold: "INFO"      #tells the message service that this destination applies to WARNING and higher level messages
     categories:
     {
       default:
       {
         limit:       1000  #don't print anything at the infomsg level except the explicitly named categories
         reportEvery: 1
       }
     }
  }
}
