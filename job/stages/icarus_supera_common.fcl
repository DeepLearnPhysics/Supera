#include "services_icarus_simulation.fcl"
#include "largeantmodules_icarus.fcl"
#include "detsimmodules_ICARUS.fcl"
#include "multipartvertex_icarus.fcl"
#include "stage0_icarus_defs.fcl"
#include "stage0_icarus_mc_defs.fcl"
#include "stage1_icarus_defs.fcl"
#include "channelmapping_icarus.fcl"
#include "genie_icarus_bnb.fcl"
#include "corsika_icarus.fcl"
#include "FilterNeutrinoActive.fcl"
#include "FilterNeutrinoInteraction.fcl"
#include "mcreco.fcl"
#include "supera_modules.fcl"

process_name: BNBNueCosmicSupera

services:
{
  @table::icarus_g4_services
	@table::icarus_detsim_services
	@table::icarus_gen_services
	IFDH: {}
	IICARUSChannelMap: @local::icarus_channelmappinggservice
}

physics:
{

 producers:
 {
	 rns: { module_type: RandomNumberSaver }
	 generator: @local::icarus_genie_BNB # from `genie_icarus_bnb.fcl`
	 cosmgen: @local::icarus_corsika_cmc
	 largeant: @local::icarus_largeant
	 # Reco producers
	 @table::icarus_stage0_producers
	 @table::icarus_stage1_producers
	 @table::icarus_stage0_mc_producers

	 # Saving MC information
   mcreco:   @local::standard_mcreco

	 # Multi-TPC DAQ
	 daq0: @local::icarus_simreadoutboard
	 daq1: @local::icarus_simreadoutboard
	 daq2: @local::icarus_simreadoutboard
	 daq3: @local::icarus_simreadoutboard
 }
 filters:
 {
	  eventActive: @local::icarus_FilterNeutrinoActive # from `FilterNeutrinoActive.fcl`
		#eventType: @local::icarus_FinalStateSelectFilter # from `FilterNeutrinoInteraction.fcl`
 }
 analyzers:
 {
	supera: {
    @table::icarus_supera_generator
    supera_params: "supera_old_simreco.fcl"
  }
 }

 simulate: [ rns, generator, eventActive, largeant, mcreco, daq0, daq1, daq2, daq3,
						MCDecodeTPCROI,
						@sequence::icarus_stage0_multiTPC_TPC, # decon1droi, roifinder
						@sequence::icarus_stage0_EastHits_TPC,
						@sequence::icarus_stage0_WestHits_TPC,
						cluster3DCryoE,
						cluster3DCryoW]
 analyze: [supera]
 out_stream: [ out1   ]

 trigger_paths: [simulate]
 end_paths:     [analyze,out_stream]
 #end_paths:     [analyze]
 #end_paths: [out_stream]
}

#
# Services
#
services.LArPropertiesService.ScintYield: 0
services.LArPropertiesService.ScintByParticleType: false

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "larsoft.root"
   dataTier:    "reco"
   compressionLevel: 1
   # skim output (if needed)
   #outputCommands: [ "drop *",
   #                  "keep *_mcreco_*_*",
   #                 "keep recob::Hit*_gaushit_*_*"
   #                ]

	 # Only uncomment if selecting events with nu in active volume
	 # SelectEvents: [simulate]
 }
}

services.TFileService.fileName: "ana.root"

services.message.destinations :
{
  STDCOUT:
  {
     type:      "cout"      #tells the message service to output this destination to cout
     threshold: "INFO"      #tells the message service that this destination applies to WARNING and higher level messages
     categories:
     {
       default:
       {
         limit:       1000  #don't print anything at the infomsg level except the explicitly named categories
         reportEvery: 1
       }
     }
  }
}
