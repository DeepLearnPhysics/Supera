#include "services_icarus_simulation.fcl"
#include "detsimmodules_ICARUS.fcl"
#include "stage0_icarus_defs.fcl"
#include "stage1_icarus_defs.fcl"
#include "channelmapping_icarus.fcl"

process_name: SuperaData

services:
{
	@table::icarus_detsim_services
	@table::icarus_gen_services
	IFDH: {}
	IICARUSChannelMap: @local::icarus_channelmappinggservice
}

source:
{
	module_type: RootInput
}

physics:
{

 producers:
 {
	 rns: { module_type: RandomNumberSaver }
	 # Reco producers
	 @table::icarus_stage0_producers
	 @table::icarus_stage1_producers
 }
 analyzers:
 {
	superaCryoE: {
		module_type: "LArSoftSuperaDriver"
		supera_params: "supera_data_cryoE.fcl"
		out_filename: "larcv_cryoE.root"
		unique_filename: false
		stream: "data"
		Verbosity: 2
		StrictDataLoading: false
	}
	superaCryoW: {
		module_type: "LArSoftSuperaDriver"
		supera_params: "supera_data_cryoW.fcl"
		out_filename: "larcv_cryoW.root"
		unique_filename: false
		stream: "data"
		Verbosity: 2
		StrictDataLoading: false
	}
 }

 simulate: [ rns,
 						daqTPC,
						daqTPCROI,
						@sequence::icarus_stage0_multiTPC_TPC, # decon1droi, roifinder
						@sequence::icarus_stage0_EastHits_TPC,
						@sequence::icarus_stage0_WestHits_TPC,
						cluster3DCryoE,
						cluster3DCryoW]
 analyze: [superaCryoE, superaCryoW]
 out_stream: [ out1   ]

 trigger_paths: [simulate]
 #end_paths:     [analyze,out_stream]
 end_paths:     [analyze]
 #end_paths: [out_stream]
}


#
# Cluster3D
#
physics.producers.cluster3DCryoE.Hit3DBuilderAlg.SaveMythicalPoints: true
physics.producers.cluster3DCryoW.Hit3DBuilderAlg.SaveMythicalPoints: true

physics.producers.cluster3DCryoE.Hit3DBuilderAlg.MinPHFor2HitPoints: 0.
physics.producers.cluster3DCryoW.Hit3DBuilderAlg.MinPHFor2HitPoints: 0.

physics.producers.cluster3DCryoE.Hit3DBuilderAlg.OutputHistograms: false
physics.producers.cluster3DCryoW.Hit3DBuilderAlg.OutputHistograms: false

#
# Services
#
services.LArPropertiesService.ScintYield: 0
services.LArPropertiesService.ScintByParticleType: false

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "larsoft.root"
   dataTier:    "reco"
   compressionLevel: 1
   # skim output (if needed)
   #outputCommands: [ "drop *",
   #                  "keep *_mcreco_*_*",
   #                 "keep recob::Hit*_gaushit_*_*"
   #                ]

	 # Only uncomment if selecting events with nu in active volume
	 # SelectEvents: [simulate]
 }
}

services.TFileService.fileName: "ana.root"

services.message.destinations :
{
  STDCOUT:
  {
     type:      "cout"      #tells the message service to output this destination to cout
     threshold: "INFO"      #tells the message service that this destination applies to WARNING and higher level messages
     categories:
     {
       default:
       {
         limit:       1000  #don't print anything at the infomsg level except the explicitly named categories
         reportEvery: 1
       }
     }
  }
}
